---
title: "Channel - Total Gaming"
author: "GT Team"
date: "2023-03-11"
image: "featured_image_total_gaming.jpg"
execute: 
  freeze: false
---

## About the Channel

[Total Gaming](https://www.youtube.com/@TotalGaming093){target="_blank"} is a popular YouTube channel featuring a highly skilled and entertaining Indian gamer who specializes in playing PC and Mobile Games. The channel offers a diverse range of gaming content, including gameplay footage, walkthroughs, tips and tricks, and more.

With a particular emphasis on Free Fire, Call of Duty Mobile, Pubg, and GTA 5, the channel's owner shares his expertise and strategies with his audience, providing a highly engaging and informative experience.

One of the unique features of the channel is the use of Hindi commentary, which allows for a more personalized and relatable viewing experience for Indian audiences. The owner's lively and engaging commentary provides a humorous and entertaining twist to the gameplay, making for an enjoyable and immersive experience.

```{r echo=FALSE, message=FALSE}

library(googlesheets4)

channels_df = read_sheet("https://docs.google.com/spreadsheets/d/1uLOvJTeGA_rguPH2tfwGQHeBGu3GKuSN8nGywUQF8no/edit?usp=sharing", sheet = "Sheet2")
```

## Overview of Channel

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(ggplot2)
library(formattable)

channel_name = "Total Gaming"

comprss <- function(tx) { 
      div <- findInterval(as.numeric(gsub("\\,", "", tx)), 
         c(0, 1e3, 1e6, 1e9, 1e12) )  # modify this if negative numbers are possible
      paste(round( as.numeric(gsub("\\,","",tx))/10^(3*(div-1)), 2), 
           c("","K","M","B","T")[div] )}

# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers

videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos

views_count = channels_df[channels_df$`channel-name` == channel_name,]$views

channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id

# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
  Data = c(comprss(c(subs, videos_count, views_count)), channel_id))

formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
channels_stats_df = read_sheet("https://docs.google.com/spreadsheets/d/1kxtV48Hm3bxdJ4ZTrB8d3SNU8iVgFPvh4Vpkp7cm8XQ/edit?usp=sharing", sheet = "Sheet1")

channels_stats_df = channels_stats_df[channels_stats_df$channel_id == channel_id,]

channels_stats_df$subs_gain = c(0,diff(channels_stats_df$subscribers, lag = 1))

channels_stats_df$views_gain = c(0,diff(channels_stats_df$views, lag = 1))

channels_stats_df = channels_stats_df[-1,]

# starting date
start_date = channels_stats_df$date[1]

# end date
end_date = channels_stats_df$date[length(channels_stats_df$date)]

# gain in KPIs for the selected duration
total_subs_gain = sum(channels_stats_df$subs_gain)
total_views_gain = sum(channels_stats_df$views_gain)
```

## Gain in Channel Subscriber Count

Subscribers added by channel `r channel_name` between `r start_date` and `r end_date` are `r comprss(total_subs_gain)`.

```{r echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=channels_stats_df, aes(x=date, y=subs_gain)) +
  geom_bar(stat="identity", fill="steelblue")+
  ylab("Subscribers Added") +
  xlab("Date") +
  theme_minimal()
```

## Gain in Channel View Count

Views gained by channel `r channel_name` between `r start_date` and `r end_date` are `r comprss(total_views_gain)`.

```{r echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=channels_stats_df, aes(x=date, y=views_gain)) +
  geom_bar(stat="identity", fill="steelblue")+
  ylab("Views Gained") +
  xlab("Date") +
  theme_minimal()
```
