install.packages('googlesheets4')
library(googlesheets4)
library(googlesheets4)
channels_df = read.csv("https://docs.google.com/spreadsheets/d/12kE4vi8IVNI5B-B79w54wj07eHY2CcRImf10CLYKz58/edit?usp=sharing")
dim(channels_df)
library(googlesheets4)
channels_df = read.csv("https://docs.google.com/spreadsheets/d/1uLOvJTeGA_rguPH2tfwGQHeBGu3GKuSN8nGywUQF8no/edit?usp=sharing")
dim(channels_df)
channe]
channels_df
library(googlesheets4)
channels_df = read_sheet("https://docs.google.com/spreadsheets/d/1uLOvJTeGA_rguPH2tfwGQHeBGu3GKuSN8nGywUQF8no/edit?usp=sharing", sheet = "Sheet2")
dim(channels_df)
channels_df
library(googlesheets4)
channels_df = read_sheet("https://docs.google.com/spreadsheets/d/1uLOvJTeGA_rguPH2tfwGQHeBGu3GKuSN8nGywUQF8no/edit?usp=sharing", sheet = "Sheet2")
dim(channels_df)
head(channels_df)
channel_name = "Total Gaming"
channels_df[channels_df$`channel-name` == channel_name]
channels_df[channels_df$`channel-name` == channel_name,:]
channels_df[channels_df$`channel-name` == channel_name,]
channels_df[channels_df$`channel-name` == channel_name,]$subscribers
library(ggplot2)
channel_name = "Total Gaming"
subscribers = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos = channels_df[channels_df$`channel-name` == channel_name,]$videos
views = channels_df[channels_df$`channel-name` == channel_name,]$views
library(ggplot2)
channel_name = "Total Gaming"
subscribers = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos = channels_df[channels_df$`channel-name` == channel_name,]$videos
views = channels_df[channels_df$`channel-name` == channel_name,]$views
library(formattable)
head(channels_df)
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = c(subs, videos_count, views_count, channel_id))
high_level_stats
formalArgs(high_level_stats)
formattable(high_level_stats)
as.datatable(formattable(high_level_stats))
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = c(comma(subs), videos_count, views_count, channel_id))
formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = c(comma(subs, format = "d"), videos_count, views_count, channel_id))
formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = c(subs, videos_count, views_count, channel_id))
formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
comprss <- function(tx) {
div <- findInterval(as.numeric(gsub("\\,", "", tx)),
c(0, 1e3, 1e6, 1e9, 1e12) )  # modify this if negative numbers are possible
paste(round( as.numeric(gsub("\\,","",tx))/10^(3*(div-1)), 2),
c("","K","M","B","T")[div] )}
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = comprss(c(subs, videos_count, views_count, channel_id)))
#formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
high_level_stats
library(ggplot2)
library(formattable)
channel_name = "Total Gaming"
comprss <- function(tx) {
div <- findInterval(as.numeric(gsub("\\,", "", tx)),
c(0, 1e3, 1e6, 1e9, 1e12) )  # modify this if negative numbers are possible
paste(round( as.numeric(gsub("\\,","",tx))/10^(3*(div-1)), 2),
c("","K","M","B","T")[div] )}
# specify high-level stats
subs = channels_df[channels_df$`channel-name` == channel_name,]$subscribers
videos_count = channels_df[channels_df$`channel-name` == channel_name,]$videos
views_count = channels_df[channels_df$`channel-name` == channel_name,]$views
channel_id = channels_df[channels_df$`channel-name` == channel_name,]$channel_id
# create table for high level stats
high_level_stats <- data.frame(Statistic = c('Subscribers', 'Videos', 'Views', 'Channel ID'),
Data = c(comprss(c(subs, videos_count, views_count)), channel_id))
#formattable(high_level_stats, col.names = c("",""), align = c('l', 'l'))
high_level_stats
